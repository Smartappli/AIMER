name: UT_Common_Models_A

on:
  workflow_call:

concurrency:
  group: ut_common_models_a-${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow, github.event.pull_request.number) || github.workflow_ref }}
  cancel-in-progress: true

jobs:
  test-alexnet-model:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: âŒ› rate 1
      shell: pwsh
      run: |
        # add random sleep since we run on fixed schedule
        sleep (get-random -max 1200)
        
        # get currently authenticated user rate limit info
        $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
    
        # if we don't have at least 100 requests left, wait until reset
        if ($rate.remaining -lt 350) {
            $wait = ($rate.reset - (Get-Date (Get-Date).ToUniversalTime() -UFormat %s))
            echo "Rate limit remaining is $($rate.remaining), waiting for $($wait) seconds to reset"
            sleep $wait
            $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
            echo "Rate limit has reset to $($rate.remaining) requests"
        }  
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coverage
        pip install -r requirements.txt
    - name: Fl_common Models AlexNet
      run: |
        coverage run manage.py test fl_common.tests.tests_models_alexnet
        coverage xml -o coverage-alexenet.xml
        coverage report
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
