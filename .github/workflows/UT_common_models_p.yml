name: UT_Common_Models_P

on:
  workflow_call:

concurrency:
  group: ut_common_models_p-${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow, github.event.pull_request.number) || github.workflow_ref }}
  cancel-in-progress: true

jobs:
  test-pit-models:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: ⌛ rate 1
      shell: pwsh
      run: |
        # add random sleep since we run on fixed schedule
        sleep (get-random -max 1200)
        
        # get currently authenticated user rate limit info
        $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
    
        # if we don't have at least 100 requests left, wait until reset
        if ($rate.remaining -lt 350) {
            $wait = ($rate.reset - (Get-Date (Get-Date).ToUniversalTime() -UFormat %s))
            echo "Rate limit remaining is $($rate.remaining), waiting for $($wait) seconds to reset"
            sleep $wait
            $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
            echo "Rate limit has reset to $($rate.remaining) requests"
        }
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false
        swap-storage: true
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install uv
        python -m uv pip install coverage
        python -m uv pip install -r tests.txt
    - name: Fl_common Models Pit
      run: |
        coverage run manage.py test fl_common.tests.tests_models_pit
        coverage xml -o coverage-pit.xml
        coverage report

  test-pnasnet-models:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: test-pit-models
    steps:
      - name: ⌛ rate 1
        shell: pwsh
        run: |
          # add random sleep since we run on fixed schedule
          sleep (get-random -max 1200)
          
          # get currently authenticated user rate limit info
          $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
          
          # if we don't have at least 100 requests left, wait until reset
          if ($rate.remaining -lt 350) {
              $wait = ($rate.reset - (Get-Date (Get-Date).ToUniversalTime() -UFormat %s))
              echo "Rate limit remaining is $($rate.remaining), waiting for $($wait) seconds to reset"
              sleep $wait
              $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
              echo "Rate limit has reset to $($rate.remaining) requests"
          }
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          python -m uv pip install coverage
          python -m uv pip install -r tests.txt
      - name: Fl_common Models Pnasnet
        run: |
          coverage run manage.py test fl_common.tests.tests_models_pnasnet
          coverage xml -o coverage-pmasnet.xml
          coverage report

  test-pvt_v2-models:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: test-pnasnet-models
    steps:
      - name: ⌛ rate 1
        shell: pwsh
        run: |
          # add random sleep since we run on fixed schedule
          sleep (get-random -max 1200)
          
          # get currently authenticated user rate limit info
          $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
          
          # if we don't have at least 100 requests left, wait until reset
          if ($rate.remaining -lt 350) {
              $wait = ($rate.reset - (Get-Date (Get-Date).ToUniversalTime() -UFormat %s))
              echo "Rate limit remaining is $($rate.remaining), waiting for $($wait) seconds to reset"
              sleep $wait
              $rate = gh api rate_limit | convertfrom-json | select -expandproperty rate
              echo "Rate limit has reset to $($rate.remaining) requests"
          }
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          python -m uv pip install coverage
          python -m uv pip install -r tests.txt
      - name: Fl_common Models Pvt v2
        run: |
          coverage run manage.py test fl_common.tests.tests_models_pvt_v2
          coverage xml -o coverage-pvt_v2.xml
          coverage report
